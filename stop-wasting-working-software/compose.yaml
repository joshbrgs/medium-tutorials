services:
  notifications:
    build:
      context: .
      dockerfile: ./cmd/notifications/Dockerfile
    ports:
      - 8091:8091
    env_file:
      - .env
    networks:
      - bad_inc_net
    depends_on:
      rabbitMq:
        condition: service_healthy

  users:
    build:
      context: .
      dockerfile: ./cmd/users/Dockerfile
    ports:
      - 8081:8081
    env_file:
      - .env
    networks:
      - bad_inc_net
    depends_on:
      rabbitMq:
        condition: service_healthy

  nemesis:
    build:
      context: .
      dockerfile: ./cmd/nemesis/Dockerfile
    ports:
      - 50051:50051
    env_file:
      - .env
    networks:
      - bad_inc_net
    depends_on:
      rabbitMq:
        condition: service_healthy

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - bad_inc_net

  rabbitMq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - bad_inc_net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    image: kong:latest
    restart: always
    env_file:
      - .env
    volumes:
      - ./kong.yml:/kong/kong.yml
      - ./cmd/nemesis/api/proto/nemesis.proto:/proto
    ports:
      - "8000:8000"
      - "8002:8002"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - bad_inc_net

volumes:
  kong-database:
  mongo_data:

networks:
  bad_inc_net:
    driver: bridge
